need    Hypervisor::IBM::POWER::HMC::REST::Atom;
need    Hypervisor::IBM::POWER::HMC::REST::Config;
need    Hypervisor::IBM::POWER::HMC::REST::Config::Analyze;
need    Hypervisor::IBM::POWER::HMC::REST::Config::Dump;
need    Hypervisor::IBM::POWER::HMC::REST::Config::Optimize;
need    Hypervisor::IBM::POWER::HMC::REST::ETL::XML;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionCapabilities;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionIOConfiguration;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionMemoryConfiguration;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionProcessorConfiguration;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::HostEthernetAdapterLogicalPorts;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::HardwareAcceleratorQoS;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::MediaRepositories;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PhysicalVolumes;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::SharedEthernetAdapters;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::TrunkAdapters;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualFibreChannelMappings;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualSCSIMappings;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::FreeIOAdaptersForLinkAggregation;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::FreeEthenetBackingDevicesForSEA;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualNICBackingDevices;
need    Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualIOServerCapabilities;
use     URI;
use     LibXML;
unit    class Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer:api<1>:auth<Mark Devine (mark@markdevine.com)>
            does Hypervisor::IBM::POWER::HMC::REST::Config::Analyze
            does Hypervisor::IBM::POWER::HMC::REST::Config::Dump
            does Hypervisor::IBM::POWER::HMC::REST::Config::Optimize
            does Hypervisor::IBM::POWER::HMC::REST::ETL::XML;

my      Bool                                                                                                                                    $names-checked = False;
my      Bool                                                                                                                                    $analyzed = False;
my      Lock                                                                                                                                    $lock = Lock.new;

has     Hypervisor::IBM::POWER::HMC::REST::Atom                                                                                                 $.atom;
has     Hypervisor::IBM::POWER::HMC::REST::Config                                                                                               $.config is required;
has     Bool                                                                                                                                    $.initialized = False;
has     Bool                                                                                                                                    $.loaded = False;
has     Str                                                                                                                                     $.id;
has     DateTime                                                                                                                                $.published;
has     Str                                                                                                                                     $.AllowPerformanceDataCollection;
has     URI                                                                                                                                     $.AssociatedPartitionProfile;
has     Str                                                                                                                                     $.AvailabilityPriority;
has     Str                                                                                                                                     $.CurrentProcessorCompatibilityMode;
has     Str                                                                                                                                     $.CurrentProfileSync;
has     Str                                                                                                                                     $.IsBootable;
has     Str                                                                                                                                     $.IsConnectionMonitoringEnabled;
has     Str                                                                                                                                     $.IsOperationInProgress;
has     Str                                                                                                                                     $.IsRedundantErrorPathReportingEnabled;
has     Str                                                                                                                                     $.IsTimeReferencePartition;
has     Str                                                                                                                                     $.IsVirtualServiceAttentionLEDOn;
has     Str                                                                                                                                     $.IsVirtualTrustedPlatformModuleEnabled;
has     Str                                                                                                                                     $.KeylockPosition;
has     Str                                                                                                                                     $.LogicalSerialNumber;
has     Str                                                                                                                                     $.OperatingSystemVersion;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionCapabilities              $.PartitionCapabilities;
has     Str                                                                                                                                     $.PartitionID;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionIOConfiguration           $.PartitionIOConfiguration;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionMemoryConfiguration       $.PartitionMemoryConfiguration;
has     Str                                                                                                                                     $.PartitionName;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionProcessorConfiguration    $.PartitionProcessorConfiguration;
has     URI                                                                                                                                     @.PartitionProfiles;
has     Str                                                                                                                                     $.PartitionState;
has     Str                                                                                                                                     $.PartitionType;
has     Str                                                                                                                                     $.PartitionUUID;
has     Str                                                                                                                                     $.PendingProcessorCompatibilityMode;
has     URI                                                                                                                                     $.ProcessorPool;
has     Str                                                                                                                                     $.ProgressPartitionDataRemaining;
has     Str                                                                                                                                     $.ProgressPartitionDataTotal;
has     Str                                                                                                                                     $.ProgressState;
has     Str                                                                                                                                     $.ResourceMonitoringControlState;
has     Str                                                                                                                                     $.ResourceMonitoringIPAddress;
has     URI                                                                                                                                     $.AssociatedManagedSystem;
has     URI                                                                                                                                     @.SRIOVEthernetLogicalPorts;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::HostEthernetAdapterLogicalPorts    $.HostEthernetAdapterLogicalPorts;
has     Str                                                                                                                                     $.MACAddressPrefix;
has     Str                                                                                                                                     $.IsServicePartition;
has     Str                                                                                                                                     $.PowerVMManagementCapable;
has     Str                                                                                                                                     $.ReferenceCode;
has     Str                                                                                                                                     $.AssignAllResources;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::HardwareAcceleratorQoS             $.HardwareAcceleratorQoS;
has     Str                                                                                                                                     $.LastActivatedProfile;
has     Str                                                                                                                                     $.HasPhysicalIO;
has     Str                                                                                                                                     $.OperatingSystemType;
has     Str                                                                                                                                     $.PendingSecureBoot;
has     Str                                                                                                                                     $.CurrentSecureBoot;
has     Str                                                                                                                                     $.PowerOnWithHypervisor;
has     Str                                                                                                                                     $.Description;
has     Str                                                                                                                                     $.APICapable;
has     Str                                                                                                                                     $.IsVNICCapable;
has     Str                                                                                                                                     $.VNICFailOverCapable;
has     URI                                                                                                                                     @.LinkAggregations;
has     Str                                                                                                                                     $.ManagerPassthroughCapable;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::MediaRepositories                  $.MediaRepositories;
has     Str                                                                                                                                     $.MoverServicePartition;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PhysicalVolumes                    $.PhysicalVolumes;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::SharedEthernetAdapters             $.SharedEthernetAdapters;
has     URI                                                                                                                                     @.StoragePools;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::TrunkAdapters                      $.TrunkAdapters;
has     Str                                                                                                                                     $.VirtualIOServerLicenseAccepted;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualFibreChannelMappings        $.VirtualFibreChannelMappings;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualSCSIMappings                $.VirtualSCSIMappings;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::FreeIOAdaptersForLinkAggregation   $.FreeIOAdaptersForLinkAggregation;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::FreeEthenetBackingDevicesForSEA    $.FreeEthenetBackingDevicesForSEA;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualNICBackingDevices           $.VirtualNICBackingDevices;
has     Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualIOServerCapabilities        $.VirtualIOServerCapabilities;

has     LibXML::Element                                                                                                                         $!xml-content;
has     LibXML::Element                                                                                                                         $!xml-VirtualIOServer;
has     LibXML::Element                                                                                                                         $!xml-PartitionCapabilities;
has     LibXML::Element                                                                                                                         $!xml-PartitionIOConfiguration;
has     LibXML::Element                                                                                                                         $!xml-PartitionMemoryConfiguration;
has     LibXML::Element                                                                                                                         $!xml-PartitionProcessorConfiguration;
has     LibXML::Element                                                                                                                         $!xml-PartitionProfiles;
has     LibXML::Element                                                                                                                         $!xml-SRIOVEthernetLogicalPorts;
has     LibXML::Element                                                                                                                         $!xml-HostEthernetAdapterLogicalPorts;
has     LibXML::Element                                                                                                                         $!xml-HardwareAcceleratorQoS;
has     LibXML::Element                                                                                                                         $!xml-LinkAggregations;
has     LibXML::Element                                                                                                                         $!xml-MediaRepositories;
has     LibXML::Element                                                                                                                         $!xml-PhysicalVolumes;
has     LibXML::Element                                                                                                                         $!xml-SharedEthernetAdapters;
has     LibXML::Element                                                                                                                         $!xml-TrunkAdapters;
has     LibXML::Element                                                                                                                         $!xml-VirtualFibreChannelMappings;
has     LibXML::Element                                                                                                                         $!xml-VirtualSCSIMappings;
has     LibXML::Element                                                                                                                         $!xml-FreeIOAdaptersForLinkAggregation;
has     LibXML::Element                                                                                                                         $!xml-FreeEthenetBackingDevicesForSEA;
has     LibXML::Element                                                                                                                         $!xml-VirtualNICBackingDevices;
has     LibXML::Element                                                                                                                         $!xml-VirtualIOServerCapabilities;

method  xml-name-exceptions () { return set <title link author etag:etag content Metadata> }

submethod TWEAK {
    self.config.diag.post:      self.^name ~ '::' ~ &?ROUTINE.name if %*ENV<HIPH_SUBMETHOD>;
    self.config.diag.post:      sprintf("%-20s %10s: %11s", self.^name.subst(/^.+'::'(.+)$/, {$0}), 'START', 't' ~ $*THREAD.id) if %*ENV<HIPH_THREAD_START>;
    my $proceed-with-name-check = False;
    my $proceed-with-analyze    = False;
    $lock.protect({
        if !$analyzed           { $proceed-with-analyze    = True; $analyzed      = True; }
        if !$names-checked      { $proceed-with-name-check = True; $names-checked = True; }
    });
    self.etl-node-name-check    if $proceed-with-name-check;
    self.init;
    self.analyze                if $proceed-with-analyze;
    self;
}

method init () {
    return self                             if $!initialized;
    self.config.diag.post:                  self.^name ~ '::' ~ &?ROUTINE.name if %*ENV<HIPH_METHOD>;
    $!xml-content                           = self.etl-branch(:TAG<content>,                            :$!xml);
    $!xml-VirtualIOServer                   = self.etl-branch(:TAG<VirtualIOServer:VirtualIOServer>,    :xml($!xml-content));
    $!xml-PartitionCapabilities             = self.etl-branch(:TAG<PartitionCapabilities>,              :xml($!xml-VirtualIOServer));
    $!xml-PartitionIOConfiguration          = self.etl-branch(:TAG<PartitionIOConfiguration>,           :xml($!xml-VirtualIOServer));
    $!xml-PartitionMemoryConfiguration      = self.etl-branch(:TAG<PartitionMemoryConfiguration>,       :xml($!xml-VirtualIOServer));
    $!xml-PartitionProcessorConfiguration   = self.etl-branch(:TAG<PartitionProcessorConfiguration>,    :xml($!xml-VirtualIOServer));
    $!xml-PartitionProfiles                 = self.etl-branch(:TAG<PartitionProfiles>,                  :xml($!xml-VirtualIOServer));
    $!xml-SRIOVEthernetLogicalPorts         = self.etl-branch(:TAG<SRIOVEthernetLogicalPorts>,          :xml($!xml-VirtualIOServer));
    $!xml-HostEthernetAdapterLogicalPorts   = self.etl-branch(:TAG<HostEthernetAdapterLogicalPorts>,    :xml($!xml-VirtualIOServer));
    $!xml-HardwareAcceleratorQoS            = self.etl-branch(:TAG<HardwareAcceleratorQoS>,             :xml($!xml-VirtualIOServer));
    $!xml-LinkAggregations                  = self.etl-branch(:TAG<LinkAggregations>,                   :xml($!xml-VirtualIOServer));
    $!xml-MediaRepositories                 = self.etl-branch(:TAG<MediaRepositories>,                  :xml($!xml-VirtualIOServer));
    $!xml-PhysicalVolumes                   = self.etl-branch(:TAG<PhysicalVolumes>,                    :xml($!xml-VirtualIOServer));
    $!xml-SharedEthernetAdapters            = self.etl-branch(:TAG<SharedEthernetAdapters>,             :xml($!xml-VirtualIOServer));
    $!xml-TrunkAdapters                     = self.etl-branch(:TAG<TrunkAdapters>,                      :xml($!xml-VirtualIOServer));
    $!xml-VirtualFibreChannelMappings       = self.etl-branch(:TAG<VirtualFibreChannelMappings>,        :xml($!xml-VirtualIOServer));
    $!xml-VirtualSCSIMappings               = self.etl-branch(:TAG<VirtualSCSIMappings>,                :xml($!xml-VirtualIOServer));
    $!xml-FreeIOAdaptersForLinkAggregation  = self.etl-branch(:TAG<FreeIOAdaptersForLinkAggregation>,   :xml($!xml-VirtualIOServer));
    $!xml-FreeEthenetBackingDevicesForSEA   = self.etl-branch(:TAG<FreeEthenetBackingDevicesForSEA>,    :xml($!xml-VirtualIOServer));
    $!xml-VirtualNICBackingDevices          = self.etl-branch(:TAG<VirtualNICBackingDevices>,           :xml($!xml-VirtualIOServer));
    $!xml-VirtualIOServerCapabilities       = self.etl-branch(:TAG<VirtualIOServerCapabilities>,        :xml($!xml-VirtualIOServer));

    $!id                                    = self.etl-text(:TAG<id>,                                   :$!xml);
    $!PartitionName                         = self.etl-text(:TAG<PartitionName>,                        :xml($!xml-VirtualIOServer));
    $!atom                                  = self.etl-atom(:xml(self.etl-branch(:TAG<Metadata>,        :xml($!xml-VirtualIOServer))));

    $!PartitionCapabilities                 = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionCapabilities.new(:$!config, :xml($!xml-PartitionCapabilities));
    $!PartitionIOConfiguration              = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionIOConfiguration.new(:$!config, :xml($!xml-PartitionIOConfiguration));
    $!PartitionMemoryConfiguration          = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionMemoryConfiguration.new(:$!config, :xml($!xml-PartitionMemoryConfiguration));
    $!PartitionProcessorConfiguration       = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PartitionProcessorConfiguration.new(:$!config, :xml($!xml-PartitionProcessorConfiguration));
    $!HostEthernetAdapterLogicalPorts       = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::HostEthernetAdapterLogicalPorts.new(:$!config, :xml($!xml-HostEthernetAdapterLogicalPorts));
    $!HardwareAcceleratorQoS                = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::HardwareAcceleratorQoS.new(:$!config, :xml($!xml-HardwareAcceleratorQoS));
    $!MediaRepositories                     = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::MediaRepositories.new(:$!config, :xml($!xml-MediaRepositories));
    $!PhysicalVolumes                       = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::PhysicalVolumes.new(:$!config, :xml($!xml-PhysicalVolumes));
    $!SharedEthernetAdapters                = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::SharedEthernetAdapters.new(:$!config, :xml($!xml-SharedEthernetAdapters));
    $!TrunkAdapters                         = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::TrunkAdapters.new(:$!config, :xml($!xml-TrunkAdapters));
    $!VirtualFibreChannelMappings           = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualFibreChannelMappings.new(:$!config, :xml($!xml-VirtualFibreChannelMappings));
    $!VirtualSCSIMappings                   = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualSCSIMappings.new(:$!config, :xml($!xml-VirtualSCSIMappings));
    $!FreeIOAdaptersForLinkAggregation      = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::FreeIOAdaptersForLinkAggregation.new(:$!config, :xml($!xml-FreeIOAdaptersForLinkAggregation));
    $!FreeEthenetBackingDevicesForSEA       = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::FreeEthenetBackingDevicesForSEA.new(:$!config, :xml($!xml-FreeEthenetBackingDevicesForSEA));
    $!VirtualNICBackingDevices              = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualNICBackingDevices.new(:$!config, :xml($!xml-VirtualNICBackingDevices));
    $!VirtualIOServerCapabilities           = Hypervisor::IBM::POWER::HMC::REST::ManagedSystems::ManagedSystem::VirtualIOServers::VirtualIOServer::VirtualIOServerCapabilities.new(:$!config, :xml($!xml-VirtualIOServerCapabilities));
    self.load                               if self.config.optimization-init-load;
    $!initialized                           = True;
    self;
}

method load () {
    return self                                 if $!loaded;
    self.config.diag.post:                      self.^name ~ '::' ~ &?ROUTINE.name if %*ENV<HIPH_METHOD>;
    $!PartitionCapabilities.load;
    $!PartitionIOConfiguration.load;
    $!PartitionMemoryConfiguration.load;
    $!PartitionProcessorConfiguration.load;
    $!HostEthernetAdapterLogicalPorts.load;
    $!HardwareAcceleratorQoS.load;
    $!MediaRepositories.load;
    $!PhysicalVolumes.load;
    $!SharedEthernetAdapters.load;
    $!TrunkAdapters.load;
    $!VirtualFibreChannelMappings.load;
    $!VirtualSCSIMappings.load;
    $!FreeIOAdaptersForLinkAggregation.load;
    $!FreeEthenetBackingDevicesForSEA.load;
    $!VirtualNICBackingDevices.load;
    $!VirtualIOServerCapabilities.load;
    $!published                                 = DateTime.new(self.etl-text(:TAG<published>,               :$!xml));
    $!AllowPerformanceDataCollection            = self.etl-text(:TAG<AllowPerformanceDataCollection>,                       :xml($!xml-VirtualIOServer));
    $!AssociatedPartitionProfile                = self.etl-href(:xml(self.etl-branch(:TAG<AssociatedPartitionProfile>,      :xml($!xml-VirtualIOServer))));
    $!AvailabilityPriority                      = self.etl-text(:TAG<AvailabilityPriority>,                                 :xml($!xml-VirtualIOServer));
    $!CurrentProcessorCompatibilityMode         = self.etl-text(:TAG<CurrentProcessorCompatibilityMode>,                    :xml($!xml-VirtualIOServer));
    $!CurrentProfileSync                        = self.etl-text(:TAG<CurrentProfileSync>,                                   :xml($!xml-VirtualIOServer));
    $!IsBootable                                = self.etl-text(:TAG<IsBootable>,                                           :xml($!xml-VirtualIOServer));
    $!IsConnectionMonitoringEnabled             = self.etl-text(:TAG<IsConnectionMonitoringEnabled>,                        :xml($!xml-VirtualIOServer));
    $!IsOperationInProgress                     = self.etl-text(:TAG<IsOperationInProgress>,                                :xml($!xml-VirtualIOServer));
    $!IsRedundantErrorPathReportingEnabled      = self.etl-text(:TAG<IsRedundantErrorPathReportingEnabled>,                 :xml($!xml-VirtualIOServer));
    $!IsTimeReferencePartition                  = self.etl-text(:TAG<IsTimeReferencePartition>,                             :xml($!xml-VirtualIOServer));
    $!IsVirtualServiceAttentionLEDOn            = self.etl-text(:TAG<IsVirtualServiceAttentionLEDOn>,                       :xml($!xml-VirtualIOServer));
    $!IsVirtualTrustedPlatformModuleEnabled     = self.etl-text(:TAG<IsVirtualTrustedPlatformModuleEnabled>,                :xml($!xml-VirtualIOServer));
    $!KeylockPosition                           = self.etl-text(:TAG<KeylockPosition>,                                      :xml($!xml-VirtualIOServer));
    $!LogicalSerialNumber                       = self.etl-text(:TAG<LogicalSerialNumber>,                                  :xml($!xml-VirtualIOServer));
    $!OperatingSystemVersion                    = self.etl-text(:TAG<OperatingSystemVersion>,                               :xml($!xml-VirtualIOServer));
    $!PartitionID                               = self.etl-text(:TAG<PartitionID>,                                          :xml($!xml-VirtualIOServer));
    @!PartitionProfiles                         = self.etl-links-URIs(:xml(self.etl-branch(:TAG<PartitionProfiles>,         :xml($!xml-VirtualIOServer))));
    $!PartitionState                            = self.etl-text(:TAG<PartitionState>,                                       :xml($!xml-VirtualIOServer));
    $!PartitionType                             = self.etl-text(:TAG<PartitionType>,                                        :xml($!xml-VirtualIOServer));
    $!PartitionUUID                             = self.etl-text(:TAG<PartitionUUID>,                                        :xml($!xml-VirtualIOServer));
    $!PendingProcessorCompatibilityMode         = self.etl-text(:TAG<PendingProcessorCompatibilityMode>,                    :xml($!xml-VirtualIOServer));
    $!ProcessorPool                             = self.etl-href(:xml(self.etl-branch(:TAG<ProcessorPool>,                   :xml($!xml-VirtualIOServer))));
    $!ProgressPartitionDataRemaining            = self.etl-text(:TAG<ProgressPartitionDataRemaining>,                       :xml($!xml-VirtualIOServer));
    $!ProgressPartitionDataTotal                = self.etl-text(:TAG<ProgressPartitionDataTotal>,                           :xml($!xml-VirtualIOServer));
    $!ProgressState                             = self.etl-text(:TAG<ProgressState>,                                        :xml($!xml-VirtualIOServer), :optional);
    $!ResourceMonitoringControlState            = self.etl-text(:TAG<ResourceMonitoringControlState>,                       :xml($!xml-VirtualIOServer));
    $!ResourceMonitoringIPAddress               = self.etl-text(:TAG<ResourceMonitoringIPAddress>,                          :xml($!xml-VirtualIOServer));
    $!AssociatedManagedSystem                   = self.etl-href(:xml(self.etl-branch(:TAG<AssociatedManagedSystem>,         :xml($!xml-VirtualIOServer))));
    @!SRIOVEthernetLogicalPorts                 = self.etl-links-URIs(:xml(self.etl-branch(:TAG<SRIOVEthernetLogicalPorts>, :xml($!xml-VirtualIOServer))));
    $!MACAddressPrefix                          = self.etl-text(:TAG<MACAddressPrefix>,                                     :xml($!xml-VirtualIOServer));
    $!IsServicePartition                        = self.etl-text(:TAG<IsServicePartition>,                                   :xml($!xml-VirtualIOServer));
    $!PowerVMManagementCapable                  = self.etl-text(:TAG<PowerVMManagementCapable>,                             :xml($!xml-VirtualIOServer));
    $!ReferenceCode                             = self.etl-text(:TAG<ReferenceCode>,                                        :xml($!xml-VirtualIOServer), :optional);
    $!AssignAllResources                        = self.etl-text(:TAG<AssignAllResources>,                                   :xml($!xml-VirtualIOServer));
    $!LastActivatedProfile                      = self.etl-text(:TAG<LastActivatedProfile>,                                 :xml($!xml-VirtualIOServer));
    $!HasPhysicalIO                             = self.etl-text(:TAG<HasPhysicalIO>,                                        :xml($!xml-VirtualIOServer));
    $!OperatingSystemType                       = self.etl-text(:TAG<OperatingSystemType>,                                  :xml($!xml-VirtualIOServer));
    $!PendingSecureBoot                         = self.etl-text(:TAG<PendingSecureBoot>,                                    :xml($!xml-VirtualIOServer));
    $!CurrentSecureBoot                         = self.etl-text(:TAG<CurrentSecureBoot>,                                    :xml($!xml-VirtualIOServer));
    $!PowerOnWithHypervisor                     = self.etl-text(:TAG<PowerOnWithHypervisor>,                                :xml($!xml-VirtualIOServer));
    $!Description                               = self.etl-text(:TAG<Description>,                                          :xml($!xml-VirtualIOServer), :optional);
    $!APICapable                                = self.etl-text(:TAG<APICapable>,                                           :xml($!xml-VirtualIOServer));
    $!IsVNICCapable                             = self.etl-text(:TAG<IsVNICCapable>,                                        :xml($!xml-VirtualIOServer));
    $!VNICFailOverCapable                       = self.etl-text(:TAG<VNICFailOverCapable>,                                  :xml($!xml-VirtualIOServer));
    @!LinkAggregations                          = self.etl-links-URIs(:xml(self.etl-branch(:TAG<LinkAggregations>,          :xml($!xml-VirtualIOServer))));
    $!ManagerPassthroughCapable                 = self.etl-text(:TAG<ManagerPassthroughCapable>,                            :xml($!xml-VirtualIOServer));
    $!MoverServicePartition                     = self.etl-text(:TAG<MoverServicePartition>,                                :xml($!xml-VirtualIOServer));
    @!StoragePools                              = self.etl-links-URIs(:xml(self.etl-branch(:TAG<StoragePools>,              :xml($!xml-VirtualIOServer))));
    $!VirtualIOServerLicenseAccepted            = self.etl-text(:TAG<VirtualIOServerLicenseAccepted>,                       :xml($!xml-VirtualIOServer));
    $!xml                                       = Nil;
    $!loaded                                    = True;
    self;
}

=finish
